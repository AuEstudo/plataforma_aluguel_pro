# config/settings.py

AUTHENTICATION_BACKENDS = [
    # 1. Logar com email
    'apartamentos.backends.EmailBackend',
    # 2. O backend padrão do Django, para manter a funcionalidade normal
    'django.contrib.auth.backends.ModelBackend',
]

LOGIN_REDIRECT_URL = 'apartamentos:lista_apartamentos'
LOGOUT_REDIRECT_URL = 'apartamentos:lista_apartamentos'
LOGIN_URL = 'login'


"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv() # Carrega variáveis do arquivo .env

BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'chave_secreta_padrao_para_desenvolvimento_insegura')
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True' # Converte string para boolean

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-tou!7#5d10l6)wi2p89)(_h(=qv+&nq*0e$+l3!_wn^d*quv64'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Meus Apps
    'apartamentos.apps.ApartamentosConfig',
    # Libs de Terceiros (adicionaremos conforme necessário)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Bahia'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static'] # Para arquivos estáticos do projeto (CSS, JS, imagens do tema)
STATIC_ROOT = BASE_DIR / 'staticfiles_collect' # Onde o collectstatic colocará os arquivos para produção
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'mediafiles' # Onde os uploads dos usuários (fotos de apartamentos) serão salvos

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- CONFIGURAÇÕES DE AUTENTICAÇÃO ---
# Para onde o usuário é redirecionado após um login bem-sucedido,
# se nenhum outro redirecionamento for especificado.
LOGIN_REDIRECT_URL = 'apartamentos:lista_apartamentos'

# Para onde o usuário é redirecionado após fazer logout.
LOGOUT_REDIRECT_URL = 'apartamentos:lista_apartamentos'

# A URL para onde o usuário é enviado se tentar acessar uma página
# que requer login sem estar autenticado.
LOGIN_URL = 'login' # Usaremos o nome da URL que vamos definir